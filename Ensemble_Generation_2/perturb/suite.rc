#!jinja2
{# Rose Configuration Insertion: Init #}
{% set ANCIL_OPT_KEYS='' %}
{% set ARCHER_GROUP='n02-NEP013406' %}
{% set ARCHER_QUEUE='short' %}
{% set ARCH_LOG=false %}
{% set ARCH_WALL=false %}
{% set ATM_PPN=24 %}
{% set ATM_PROCX=16 %}
{% set ATM_PROCY=12 %}
{% set BASIS='19880901T0000Z' %}
{% set BITCOMP_NRUN=false %}
{% set BUILD_UM=false %}
{% set CALENDAR='360day' %}
{% set CLOCK='PT20M' %}
{% set CYLC_VERSION="6.11.4" %}
{% set DATAM='History_Data' %}
{% set ENSEMBLE_SIZE=5 %}
{% set HORIZ='n96' %}
{% set HPC_USER='chmcsy' %}
{% set HYPTHR_ATM=1 %}
{% set HYPTHR_RCF=1 %}
{% set IOS_NPROC=0 %}
{% set MANUAL_COMPILE=false %}
{% set NCI_QUEUE='normal' %}
{% set NCRUN_CLOCK='PT30M' %}
{% set NCRUN_RESUB='P10D' %}
{% set NIWA_ACCOUNT='' %}
{% set NIWA_CLASS='General' %}
{% set OMPTHR_ATM=1 %}
{% set OMPTHR_RCF=1 %}
{% set OMP_HYPTHR_ATM=2 %}
{% set OMP_OMPTHR_ATM=2 %}
{% set PE_ATM_PROCX=28 %}
{% set PE_ATM_PROCY=16 %}
{% set PE_IOS_NPROC=0 %}
{% set POSTPROC=false %}
{% set PPTRANSFER=false %}
{% set RCF_PROCX=4 %}
{% set RCF_PROCY=6 %}
{% set RECON=true %}
{% set RESUB='P1D' %}
{% set ROSE_ORIG_HOST="puma" %}
{% set ROSE_VERSION="2016.11.1" %}
{% set RUN=true %}
{% set RUNID=true %}
{% set RUNLEN='other' %}
{% set RUNLEN_OTHER='P3D' %}
{% set SITE='archer' %}
{% set TESTS=false %}
{% set TEST_CRUN=true %}
{% set TEST_INCS=false %}
{% set TEST_NOOMP=true %}
{% set TEST_NOSTASH=false %}
{% set TEST_NRUN=true %}
{% set TEST_OMP=true %}
{% set TEST_PE=false %}
{% set UM_OPT_KEYS='' %}
{% set USE_MOOPROJECT=false %}
{# Rose Configuration Insertion: Done #}

# Set default task run command to optionally use site specific opt configs
{% set TASK_RUN_COMMAND = "rose task-run --verbose -O '(" + SITE + ")'" %}

# Command for UM must have ancils pre-loaded and make sure using main executable
{% set UM_TASK_RUN_COMMAND = ". $ROSE_DATA/etc/um_ancils_gl; " + TASK_RUN_COMMAND ~ ' --path="share/fcm_make_um/build-*/bin"' %}

# Set rose date command and associated print-format options
{% set ROSEDATE = "rose date -c --calendar=" + CALENDAR %}
{% set PFMT_YR = "--print-format='%Y'" %}
{% set PFMT_MONTH = "--print-format='%Y%b'" %}
{% set PFMT_DUMP = "--print-format='%Y%m%d_%H'" %}
{% set PFMT_UM_PT = "--print-format='%Y,%m,%d,%H,%M,%S'" %}
{% set PFMT_UM_DUR = "--print-format='y,m,d,h,M,s'" %}

# Set jinja2 variables based on values from rose-suite.conf file
{% set BITCOMP_NRUN_OPT = 'bitcomp' if BITCOMP_NRUN else '' %}
{% set RUNLEN = RUNLEN_OTHER if RUNLEN == 'other' else RUNLEN %}
{% set MOOPROJECT = '' if not USE_MOOPROJECT else MOOPROJECT %}

# Test to determine when to use single fcm_make_um task
{% set SINGLE_FCMUM = ['meto_cray', 'MONSooN'] %}

[cylc]
    UTC mode = True
    [[events]]
        mail events = shutdown

    [[parameters]]
        ens = {{ range(ENSEMBLE_SIZE) | join(', ') }}

[scheduling]

    cycling mode        = {{CALENDAR}}
    initial cycle point = {{BASIS}}
    final cycle point   = +{{RUNLEN}}-PT1S

    [[special tasks]]
        sequential = atmos_main, postproc, pptransfer, supermean, housekeeping, rose_arch_logs
#        sequential = atmos<ens>, postproc, pptransfer, supermean, housekeeping, rose_arch_logs

    [[dependencies]]

{% if SITE in SINGLE_FCMUM %}
    {% set FCMUM_GRAPH = 'fcm_make_um' %}
    {% set FCMUM_LAST = 'fcm_make_um' %}
{% else %}
    {% set FCMUM_GRAPH = 'fcm_make_um => fcm_make2_um' %}
    {% set FCMUM_LAST = 'fcm_make2_um' %}
{% endif %}

{% if BUILD_UM %}
        [[[R1]]]
            graph = {{FCMUM_GRAPH}}
{% endif %}

{% if RECON %}
        {% if BUILD_UM %}
        [[[ R1 ]]]
            graph = {{FCMUM_LAST}} => recon
        {% endif %}

        [[[ R1 ]]]
            graph = install_ancil => recon

        {% if RUN %}
        [[[ R1 ]]]
            graph = recon => perturb => atmos<ens>
        {% endif %}
{% endif %}

{% if RUN %}
        {% if BUILD_UM %}
        [[[ R1 ]]]
            graph = {{FCMUM_LAST}} => perturb => atmos<ens>
        {% endif %}

        [[[ R1 ]]]
            graph = install_ancil => perturb => atmos<ens>

        [[[ {{RESUB}} ]]]
            graph = atmos<ens>[-{{RESUB}}] => atmos<ens> => housekeeping

        {% if POSTPROC %}
        [[[R1]]]
            graph = fcm_make_pp => fcm_make2_pp => postproc
        [[[ {{RESUB}} ]]]
            graph = atmos<ens>[-{{RESUB}}] => atmos<ens> => postproc => housekeeping
        {% if PPTRANSFER %}
        [[[R1]]]
            graph = fcm_make_pptransfer => fcm_make2_pptransfer => pptransfer
        [[[ {{RESUB}} ]]]
            graph = postproc => pptransfer => housekeeping
        {% endif %}
        {% if SITE == 'meto_cray' %}
        {% if SUPERMEAN %}
        [[[ {{RESUB}} ]]]
            # Run supermean task every cycle, logic for if
            #  supermeans are calculated is in supermean script
            graph = postproc => supermean => housekeeping
        {% endif %}   # supermean
        {% endif %}   # site =meto_cray
        {% endif %}

        {% if ARCH_LOG %}
        [[[ {{RESUB}} ]]]
            graph = housekeeping => rose_arch_logs
        {% endif %}

        {% if ARCH_WALL %}
        [[[ R1//^+{{RUNLEN}}-{{RESUB}} ]]]
            graph = atmos<ens> => rose_arch_wallclock
        {% endif %}

# Include tests graph if required
{% if TESTS %}
{% include 'suite-tests-graph.rc' %}
{% endif %}
{% endif %}

[runtime]
    [[root]]
        script = {{TASK_RUN_COMMAND}}
        env-script = "eval $(rose task-env)"
        [[[environment]]]
            # Logicals for decision making based on initial cycle
            IS_CYLC_SUITE_INITIAL_CYCLE_POINT = $(if [ $CYLC_TASK_CYCLE_POINT == $CYLC_SUITE_INITIAL_CYCLE_POINT ]; then echo "true"; else echo "false"; fi)
            IS_CYLC_TASK_TRY_NUMBER_1 = $(if [ $CYLC_TASK_TRY_NUMBER -eq 1 ]; then echo "true"; else echo "false"; fi)
            # Dates used in apps
            BASIS_UM_PT = $({{ROSEDATE}} {{PFMT_UM_PT}} {{BASIS}})
            BASIS_YR = $({{ROSEDATE}} {{PFMT_YR}} {{BASIS}})
            DATEC_DUMP = $({{ROSEDATE}} {{PFMT_DUMP}})
            # RUNID for file names used in UM, postproc and rose_ana apps
            {# Set up the runid which controls the first five characters of #}
            {# the output filenames. This can either be the final five      #}
            {# characters of the suite id or RUNID_USR as set by the user.  #}
            {% if RUNID %}
            RUNID = $(echo -n $CYLC_SUITE_NAME | cut -d - -f 2 | cut -c 1-5)
            {% else %}
            RUNID = {{RUNID_USR}}
            {% endif %}
            # UM version being used, required in postproc app
            UMVN = 11.0
        [[[events]]]
            mail events = submission retry, retry, submission failed, failed, submission timeout, timeout
            submission timeout = P1D

    [[UM]]
        inherit = STARTDUMP
        script = {{UM_TASK_RUN_COMMAND}}
        [[[environment]]]
            ASTARTDIR = $ROSE_DATA/{{DATAM}}
            FLUME_IOS_NPROC = {{IOS_NPROC}}
            RCF_NPROCX = {{RCF_PROCX}}
            RCF_NPROCY = {{RCF_PROCY}}
#            ROSE_APP_OPT_CONF_KEYS = ({{HORIZ}}) ({{CALENDAR}}) {{BITCOMP_NRUN_OPT}} {{UM_OPT_KEYS}}
            ROSE_TASK_APP = um
            UM_ATM_NPROCX = {{ATM_PROCX}}
            UM_ATM_NPROCY = {{ATM_PROCY}}

    [[RECONFIGURE]]
        inherit = UM
        [[[environment]]]
            HYPERTHREADS = {{HYPTHR_RCF}}
            OMP_NUM_THREADS = {{OMPTHR_RCF}}
            TASKEND = $BASIS_UM_PT


    [[ATMOS]]
        inherit = UM
        [[[environment]]]
            HYPERTHREADS = {{HYPTHR_ATM}}
            OMP_NUM_THREADS = {{OMPTHR_ATM}}
            CONTINUE = $(if $IS_CYLC_SUITE_INITIAL_CYCLE_POINT && $IS_CYLC_TASK_TRY_NUMBER_1; then echo "false"; else echo "true"; fi)
            TASKEND = $({{ROSEDATE}} {{PFMT_UM_DUR}} --offset2={{RESUB}} {{BASIS}} ref)


    [[RUN_MAIN]]
#        [[[environment]]]
#            DATAM = =$ROSE_DATA/{{DATAM}}


    {% if SITE in SINGLE_FCMUM %}
    [[fcm_make_um]]
        inherit = RUN_MAIN, UMBUILD_RESOURCE, UMBUILD
    {% else %}
    [[fcm_make_um]]
        inherit = RUN_MAIN, EXTRACT_RESOURCE, UMBUILD
    [[fcm_make2_um]]
        inherit = RUN_MAIN, UMBUILD_RESOURCE, UMBUILD
    {% endif %}

    [[install_ancil]]
        inherit = RUN_MAIN, INSTALL_ANCIL_RESOURCE
        [[[environment]]]
            ROSE_APP_OPT_CONF_KEYS = ({{HORIZ}}) {{ANCIL_OPT_KEYS}}

    [[recon]]
        inherit = RUN_MAIN, RCF_RESOURCE, RECONFIGURE
        [[[environment]]]
            ASTART=$ROSE_DATA/$RUNID.astart
            DATAM=$ROSE_DATA/{{DATAM}}
            ENS_MEMBER=0

    [[atmos_main]]
        inherit = RUN_MAIN, ATMOS_RESOURCE, ATMOS
        post-script = save_wallclock.sh {{RESUB}}

    [[atmos<ens>]]
        inherit = RUN_MAIN, ATMOS_RESOURCE, ATMOS
        post-script = save_wallclock.sh {{ RESUB }}
        [[[environment]]]
            ASTART=${ROSE_DATA}/$RUNID.astart
            DATAM=$ROSE_DATA/{{DATAM}}/ens_${CYLC_TASK_PARAM_ens}
            ENS_MEMBER=${CYLC_TASK_PARAM_ens}
            ROSE_APP_OPT_CONF_KEYS = ens${ENS_MEMBER} ({{HORIZ}}) ({{CALENDAR}}) {{BITCOMP_NRUN_OPT}} {{UM_OPT_KEYS}}
           
    [[perturb]]
        inherit = PERTURB_RESOURCE
        script = "rose task-run --app-key=perturb --verbose"
        [[[environment]]]
            TMPL_LOC=${CYLC_SUITE_RUN_DIR}/app/perturb/bin/template.conf
            CONF_LOC=${CYLC_SUITE_RUN_DIR}/app/um/opt
            ENS_LST={{ range(ENSEMBLE_SIZE) | join(' ') }}
            DF_LOC=${CYLC_SUITE_RUN_DIR}/app/perturb/bin/ppe_dataframe.csv
 
    [[fcm_make_pp]]
        inherit = RUN_MAIN, EXTRACT_RESOURCE
    [[fcm_make2_pp]]
        inherit = RUN_MAIN, PPBUILD_RESOURCE

    [[POSTPROC]]
        [[[environment]]]
            ARCHIVE_SET = $CYLC_SUITE_NAME

    [[postproc]]
        inherit = RUN_MAIN, POSTPROC_RESOURCE, POSTPROC
        [[[environment]]]
            MODELBASIS = $BASIS_UM_PT
            CYCLEPERIOD = {{RESUB}}
            MOOPROJECT = {{MOOPROJECT}}

    [[fcm_make_pptransfer]]
        inherit = RUN_MAIN, EXTRACT_RESOURCE
        [[[environment]]]
            ROSE_TASK_APP = fcm_make_pp
    [[fcm_make2_pptransfer]]
        inherit = RUN_MAIN, PPTRANSFER_RESOURCE
        [[[environment]]]
            ROSE_TASK_APP = fcm_make_pp

    [[pptransfer]]
        inherit = RUN_MAIN, PPTRANSFER_RESOURCE
        [[[environment]]]
            CYCLEPERIOD = {{RESUB}}
            ROSE_TASK_APP = postproc
            PLATFORM = linux

    [[supermean]]
        inherit = RUN_MAIN, SUPERMEAN_RESOURCE, POSTPROC
        [[[environment]]]
            BASIS = $({{ROSEDATE}} {{BASIS}})
            TCYCLE = $({{ROSEDATE}} ref)
            NCYCLE = $({{ROSEDATE}} --offset={{RESUB}} ref)

    [[rose_arch_logs]]
        inherit = RUN_MAIN, LOGS_RESOURCE
        [[[environment]]]
            ROSE_APP_OPT_CONF_KEYS = logs
            ROSE_TASK_APP = rose_arch

    [[rose_arch_wallclock]]
        inherit = RUN_MAIN, WALLCLOCK_RESOURCE
        [[[environment]]]
            ROSE_APP_OPT_CONF_KEYS = wallclock
            ROSE_TASK_APP = rose_arch

    [[housekeeping]]
        inherit = RUN_MAIN, HOUSEKEEP_RESOURCE

# Include tests runtime if required
{% if RUN and TESTS %}
{% include 'suite-tests-runtime.rc' %}
{% endif %}

# Include site specific configurations
{% include 'site/'+SITE+'.rc' %}

[visualization]
    initial cycle point = {{BASIS}}
